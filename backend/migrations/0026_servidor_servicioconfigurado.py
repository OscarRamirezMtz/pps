# Generated by Django 5.2 on 2025-05-26 08:56

import django.core.validators
import django.db.models.deletion
from django.conf import settings
from django.db import migrations, models


class Migration(migrations.Migration):

    dependencies = [
        ('backend', '0025_rename_code_otpcode_codigo_otpintento_direccion_ip_and_more'),
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.CreateModel(
            name='Servidor',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('nombre', models.CharField(help_text='Un nombre descriptivo y único para el servidor.', max_length=100, unique=True, verbose_name='Nombre del Servidor')),
                ('direccion_host', models.CharField(help_text='La dirección IP (ej: 192.168.1.10) o el nombre de dominio completo (ej: servidor.midominio.com) del servidor.', max_length=255, verbose_name='Dirección IP o Dominio')),
                ('usuario_remoto', models.CharField(help_text='El nombre de usuario para conectarse al servidor vía SSH (ej: admin, root, ubuntu).', max_length=50, verbose_name='Usuario Remoto SSH')),
                ('ssh_port', models.PositiveIntegerField(default=22, help_text='El puerto en el que el servidor escucha conexiones SSH. Por defecto es 22.', validators=[django.core.validators.MinValueValidator(1), django.core.validators.MaxValueValidator(65535)], verbose_name='Puerto SSH')),
                ('clave_ssh_configurada', models.BooleanField(default=False, help_text="Marcar si la clave pública de esta plataforma ya ha sido añadida al 'authorized_keys' del usuario remoto en el servidor para acceso sin contraseña.", verbose_name='¿Clave SSH configurada?')),
                ('detalles_adicionales', models.TextField(blank=True, help_text='Cualquier nota, descripción o información relevante sobre el servidor (ej: OS, propósito, recordatorios de seguridad específicos).', null=True, verbose_name='Detalles Adicionales')),
                ('fecha_registro', models.DateTimeField(auto_now_add=True, verbose_name='Fecha de Registro')),
                ('ultima_modificacion', models.DateTimeField(auto_now=True, verbose_name='Última Modificación')),
                ('registrado_por', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='servidores_registrados', to=settings.AUTH_USER_MODEL, verbose_name='Administrador que registró')),
            ],
            options={
                'verbose_name': 'Servidor Linux',
                'verbose_name_plural': 'Servidores Linux',
                'ordering': ['nombre'],
            },
        ),
        migrations.CreateModel(
            name='ServicioConfigurado',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('nombre_servicio_remoto', models.CharField(help_text="El nombre real del servicio en el sistema Linux (ej: 'apache2', 'nginx', 'mysql', 'sshd'). Este nombre se usará para los comandos si no se especifican comandos personalizados.", max_length=100, verbose_name='Nombre del Servicio en el Servidor')),
                ('descripcion_personalizada', models.TextField(blank=True, help_text="Una descripción opcional para este servicio configurado (ej: 'Servidor web principal', 'Base de datos de usuarios').", verbose_name='Descripción Personalizada')),
                ('estado_conocido', models.CharField(choices=[('desconocido', 'Desconocido'), ('activo', 'Activo'), ('inactivo', 'Inactivo'), ('error_verificacion', 'Error al Verificar'), ('levantando', 'Levantando...'), ('bajando', 'Dando de baja...'), ('reiniciando', 'Reiniciando...')], default='desconocido', help_text='El último estado detectado del servicio en el servidor remoto. Se actualiza mediante monitorización.', max_length=20, verbose_name='Último Estado Conocido')),
                ('puerto_monitorizar', models.PositiveIntegerField(blank=True, help_text='Si el servicio escucha en un puerto específico, indícalo aquí para una posible verificación de estado basada en el puerto.', null=True, validators=[django.core.validators.MinValueValidator(1), django.core.validators.MaxValueValidator(65535)], verbose_name='Puerto a Monitorizar (Opcional)')),
                ('comando_verificar_estado', models.TextField(blank=True, help_text="Opcional. Comando específico para verificar el estado de este servicio en el servidor remoto. Si se deja vacío, se intentarán comandos estándar (ej: 'systemctl status nombre_servicio_remoto').", verbose_name='Comando Personalizado para Verificar Estado')),
                ('comando_levantar', models.TextField(blank=True, help_text='Opcional. Comando específico para iniciar/levantar este servicio. Si se deja vacío, se intentarán comandos estándar.', verbose_name='Comando Personalizado para Levantar Servicio')),
                ('comando_bajar', models.TextField(blank=True, help_text='Opcional. Comando específico para detener/dar de baja este servicio. Si se deja vacío, se intentarán comandos estándar.', verbose_name='Comando Personalizado para Dar de Baja Servicio')),
                ('comando_reiniciar', models.TextField(blank=True, help_text='Opcional. Comando específico para reiniciar este servicio. Si se deja vacío, se intentarán comandos estándar.', verbose_name='Comando Personalizado para Reiniciar Servicio')),
                ('habilitado_para_gestion', models.BooleanField(default=True, help_text='Desmarcar si no se desea que este servicio sea gestionable (levantar, bajar, reiniciar) a través de la plataforma, solo monitorización.', verbose_name='¿Habilitado para Gestión desde Plataforma?')),
                ('ultima_comprobacion_estado', models.DateTimeField(blank=True, help_text='Cuándo se verificó por última vez el estado de este servicio.', null=True, verbose_name='Fecha de Última Comprobación de Estado')),
                ('log_ultima_accion', models.TextField(blank=True, help_text='Resultado o log de la última acción ejecutada sobre este servicio (levantar, bajar, reiniciar, verificar estado).', verbose_name='Log de la Última Acción')),
                ('fecha_configuracion', models.DateTimeField(auto_now_add=True, verbose_name='Fecha de Configuración')),
                ('ultima_actualizacion_config', models.DateTimeField(auto_now=True, verbose_name='Última Actualización de Configuración')),
                ('configurado_por', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='servicios_que_configuro', to=settings.AUTH_USER_MODEL, verbose_name='Configurado por')),
                ('servidor', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='servicios_configurados', to='backend.servidor', verbose_name='Servidor Asociado')),
            ],
            options={
                'verbose_name': 'Servicio Configurado en Servidor',
                'verbose_name_plural': 'Servicios Configurados en Servidores',
                'ordering': ['servidor__nombre', 'nombre_servicio_remoto'],
                'unique_together': {('servidor', 'nombre_servicio_remoto')},
            },
        ),
    ]
